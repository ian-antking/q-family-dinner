'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames3 = require('classnames');

var _classnames4 = _interopRequireDefault(_classnames3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

exports.default = {
  propTypes: {
    textSize: _propTypes2.default.oneOf([1, 2, 3, 4, 5, 6]),
    textAlignment: _propTypes2.default.oneOf(['centered', 'justified', 'left', 'right']),
    textTransform: _propTypes2.default.oneOf(['capitalized', 'lowercase', 'uppercase']),
    textWeight: _propTypes2.default.oneOf(['light', 'normal', 'semibold', 'bold']),
    italic: _propTypes2.default.bool
  },
  defaultProps: {
    textSize: undefined,
    textAlignment: undefined,
    textTransform: undefined,
    italic: undefined,
    textWeight: undefined
  },
  classnames: function classnames(props) {
    var _classnames2;

    return (0, _classnames4.default)((_classnames2 = {}, _defineProperty(_classnames2, 'has-text-' + props.textAlignment, props.textAlignment), _defineProperty(_classnames2, 'has-text-weight-' + props.textWeight, props.textWeight), _defineProperty(_classnames2, 'is-size-' + props.textSize, props.textSize), _defineProperty(_classnames2, 'is-' + props.textTransform, props.textTransform), _defineProperty(_classnames2, 'is-italic', props.italic), _classnames2));
  },
  clean: function clean(_ref) {
    var textWeight = _ref.textWeight,
        textTransform = _ref.textTransform,
        italic = _ref.italic,
        textSize = _ref.textSize,
        textAlignment = _ref.textAlignment,
        props = _objectWithoutProperties(_ref, ['textWeight', 'textTransform', 'italic', 'textSize', 'textAlignment']);

    return props;
  }
};
//# sourceMappingURL=typography.js.map