'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _constants = require('../../constants');

var _constants2 = _interopRequireDefault(_constants);

var _item = require('./components/item');

var _item2 = _interopRequireDefault(_item);

var _divider = require('./components/divider');

var _divider2 = _interopRequireDefault(_divider);

var _button = require('../button');

var _button2 = _interopRequireDefault(_button);

var _icon = require('../icon');

var _icon2 = _interopRequireDefault(_icon);

var _modifiers = require('../../modifiers');

var _modifiers2 = _interopRequireDefault(_modifiers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var colors = [null].concat(Object.keys(_constants2.default.COLORS).map(function (key) {
  return _constants2.default.COLORS[key];
}));

var Dropdown = function (_PureComponent) {
  _inherits(Dropdown, _PureComponent);

  function Dropdown() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Dropdown);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      open: false
    }, _this.close = function (evt) {
      // IDK yet how to test using the ref in enzime
      if (_this.props.hoverable || evt && evt.path.find(function (node) {
        return node === _this.htmlElement;
      })) {
        return;
      }
      _this.setState({ open: false });
    }, _this.toggle = function (evt) {
      if (_this.props.hoverable) {
        return;
      }
      if (evt) {
        evt.preventDefault();
      }
      _this.setState(function (_ref2) {
        var open = _ref2.open;
        return { open: !open };
      });
    }, _this.select = function (value) {
      return function () {
        if (_this.props.onChange) {
          _this.props.onChange(value);
        }
        _this.close();
      };
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Dropdown, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      document.addEventListener('click', this.close);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      document.removeEventListener('click', this.close);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this,
          _classnames;

      var _props = this.props,
          className = _props.className,
          children = _props.children,
          value = _props.value,
          color = _props.color,
          align = _props.align,
          hoverable = _props.hoverable,
          onChange = _props.onChange,
          allProps = _objectWithoutProperties(_props, ['className', 'children', 'value', 'color', 'align', 'hoverable', 'onChange']);

      var current = null;
      var props = _modifiers2.default.clean(allProps);

      var childrenArray = _react2.default.Children.map(children, function (child, i) {
        if (i === 0 || child.props.value === value) {
          current = child.props.children;
        }
        return _react2.default.cloneElement(child, child.type === _item2.default ? {
          active: child.props.value === value,
          onClick: _this2.select(child.props.value)
        } : {});
      });

      return _react2.default.createElement(
        'div',
        _extends({}, props, {
          ref: function ref(node) {
            _this2.htmlElement = node;
          },
          className: (0, _classnames3.default)('dropdown', _modifiers2.default.classnames(allProps), className, (_classnames = {
            'is-active': this.state.open
          }, _defineProperty(_classnames, 'is-' + align, align), _defineProperty(_classnames, 'is-hoverable', hoverable), _classnames))
        }),
        _react2.default.createElement(
          'div',
          { className: 'dropdown-trigger', role: 'presentation', onClick: this.toggle },
          _react2.default.createElement(
            _button2.default,
            { color: color },
            _react2.default.createElement(
              'span',
              null,
              current
            ),
            _react2.default.createElement(_icon2.default, { icon: 'angle-down', size: 'small' })
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'dropdown-menu', id: 'dropdown-menu', role: 'menu' },
          _react2.default.createElement(
            'div',
            { className: 'dropdown-content' },
            childrenArray
          )
        )
      );
    }
  }]);

  return Dropdown;
}(_react.PureComponent);

Dropdown.Item = _item2.default;
Dropdown.Divider = _divider2.default;
Dropdown.propTypes = _extends({}, _modifiers2.default.propTypes, {
  className: _propTypes2.default.string,
  style: _propTypes2.default.shape({}),
  children: _propTypes2.default.node,
  value: _propTypes2.default.any,
  onChange: _propTypes2.default.func,
  color: _propTypes2.default.oneOf(colors),
  align: _propTypes2.default.oneOf(['right']),
  hoverable: _propTypes2.default.bool
});
Dropdown.defaultProps = _extends({}, _modifiers2.default.defaultProps, {
  className: '',
  style: {},
  value: undefined,
  children: [],
  onChange: undefined,
  color: undefined,
  align: undefined,
  hoverable: undefined
});
exports.default = Dropdown;
//# sourceMappingURL=dropdown.js.map