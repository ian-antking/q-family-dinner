{"version":3,"sources":["../../../src/components/hero/hero.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Hero","children","className","color","gradient","size","props","Head","HeroHead","Body","HeroBody","Footer","HeroFooter","propTypes","modifiers","PropTypes","node","string","style","shape","renderAs","oneOfType","func","oneOf","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAMA,SAAS,CAAC,IAAD,EAAOC,MAAP,CAAcC,OAAOC,IAAP,CAAYC,oBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC;AAAA,SAAOF,oBAAUC,MAAV,CAAiBE,GAAjB,CAAP;AAAA,CAAlC,CAAd,CAAf;;AAEA,IAAMC,OAAO,SAAPA,IAAO;AAAA;;AAAA,MACXC,QADW,QACXA,QADW;AAAA,MAEXC,SAFW,QAEXA,SAFW;AAAA,MAGXC,KAHW,QAGXA,KAHW;AAAA,MAIXC,QAJW,QAIXA,QAJW;AAAA,MAKXC,IALW,QAKXA,IALW;AAAA,MAMRC,KANQ;;AAAA,SAQX;AAAC,qBAAD;AAAA,iBACMA,KADN;AAEE,iBAAW,0BAAW,MAAX,EAAmBJ,SAAnB,0DACFC,KADE,EACQA,KADR,wCAEFE,IAFE,EAEOA,IAFP,gCAGT,SAHS,EAGED,QAHF;AAFb;AAQGH;AARH,GARW;AAAA,CAAb;;AAoBAD,KAAKO,IAAL,GAAYC,kBAAZ;;AAEAR,KAAKS,IAAL,GAAYC,kBAAZ;;AAEAV,KAAKW,MAAL,GAAcC,oBAAd;;AAEAZ,KAAKa,SAAL,gBACKC,oBAAUD,SADf;AAEEZ,YAAUc,oBAAUC,IAFtB;AAGEd,aAAWa,oBAAUE,MAHvB;AAIEC,SAAOH,oBAAUI,KAAV,CAAgB,EAAhB,CAJT;AAKEC,YAAUL,oBAAUM,SAAV,CAAoB,CAACN,oBAAUE,MAAX,EAAmBF,oBAAUO,IAA7B,CAApB,CALZ;AAMEnB,SAAOY,oBAAUQ,KAAV,CAAgB/B,MAAhB,CANT;AAOEY,YAAUW,oBAAUS,IAPtB;AAQEnB,QAAMU,oBAAUQ,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,YAApB,CAAhB;AARR;;AAWAvB,KAAKyB,YAAL,gBACKX,oBAAUW,YADf;AAEExB,YAAU,IAFZ;AAGEC,aAAW,EAHb;AAIEgB,SAAO,EAJT;AAKEE,YAAU,SALZ;AAMEjB,SAAO,IANT;AAOEC,YAAU,KAPZ;AAQEC,QAAM;AARR;;kBAWeL,I","file":"hero.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\n\nimport HeroHead from './components/hero-head';\nimport HeroBody from './components/hero-body';\nimport HeroFooter from './components/hero-footer';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nconst Hero = ({\n  children,\n  className,\n  color,\n  gradient,\n  size,\n  ...props\n}) => (\n  <Element\n    {...props}\n    className={classnames('hero', className, {\n      [`is-${color}`]: color,\n      [`is-${size}`]: size,\n      'is-bold': gradient,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nHero.Head = HeroHead;\n\nHero.Body = HeroBody;\n\nHero.Footer = HeroFooter;\n\nHero.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  color: PropTypes.oneOf(colors),\n  gradient: PropTypes.bool,\n  size: PropTypes.oneOf(['medium', 'large', 'fullheight']),\n};\n\nHero.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: '',\n  style: {},\n  renderAs: 'section',\n  color: null,\n  gradient: false,\n  size: null,\n};\n\nexport default Hero;\n"]}