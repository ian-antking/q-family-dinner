{"version":3,"sources":["../../../src/components/message/message.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Message","children","className","color","size","props","Body","MessageBody","Header","MessageHeader","propTypes","modifiers","PropTypes","node","string","style","shape","renderAs","oneOfType","func","oneOf","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAMA,SAAS,CAAC,IAAD,EAAOC,MAAP,CAAcC,OAAOC,IAAP,CAAYC,oBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC;AAAA,SAAOF,oBAAUC,MAAV,CAAiBE,GAAjB,CAAP;AAAA,CAAlC,CAAd,CAAf;;AAEA,IAAMC,UAAU,SAAVA,OAAU;AAAA;;AAAA,MACdC,QADc,QACdA,QADc;AAAA,MAEdC,SAFc,QAEdA,SAFc;AAAA,MAGdC,KAHc,QAGdA,KAHc;AAAA,MAIdC,IAJc,QAIdA,IAJc;AAAA,MAKXC,KALW;;AAAA,SAOd;AAAC,qBAAD;AAAA,iBACMA,KADN;AAEE,iBAAW,0BAAW,SAAX,EAAsBH,SAAtB,0DACFC,KADE,EACQA,KADR,wCAEFC,IAFE,EAEOA,IAFP;AAFb;AAOGH;AAPH,GAPc;AAAA,CAAhB;;AAkBAD,QAAQM,IAAR,GAAeC,cAAf;;AAEAP,QAAQQ,MAAR,GAAiBC,gBAAjB;;AAEAT,QAAQU,SAAR,gBACKC,oBAAUD,SADf;AAEET,YAAUW,oBAAUC,IAFtB;AAGEX,aAAWU,oBAAUE,MAHvB;AAIEC,SAAOH,oBAAUI,KAAV,CAAgB,EAAhB,CAJT;AAKEC,YAAUL,oBAAUM,SAAV,CAAoB,CAC5BN,oBAAUE,MADkB,EAE5BF,oBAAUO,IAFkB,CAApB,CALZ;AASEf,QAAMQ,oBAAUQ,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CATR;AAUEjB,SAAOS,oBAAUQ,KAAV,CAAgB5B,MAAhB;AAVT;;AAaAQ,QAAQqB,YAAR,gBACKV,oBAAUU,YADf;AAEEpB,YAAU,IAFZ;AAGEC,aAAW,EAHb;AAIEa,SAAO,EAJT;AAKEE,YAAU,SALZ;AAMEd,SAAO,IANT;AAOEC,QAAM;AAPR;;kBAUeJ,O","file":"message.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\n\nimport MessageBody from './components/body';\nimport MessageHeader from './components/header';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nconst Message = ({\n  children,\n  className,\n  color,\n  size,\n  ...props\n}) => (\n  <Element\n    {...props}\n    className={classnames('message', className, {\n      [`is-${color}`]: color,\n      [`is-${size}`]: size,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nMessage.Body = MessageBody;\n\nMessage.Header = MessageHeader;\n\nMessage.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  renderAs: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  color: PropTypes.oneOf(colors),\n};\n\nMessage.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: '',\n  style: {},\n  renderAs: 'article',\n  color: null,\n  size: null,\n};\n\nexport default Message;\n"]}