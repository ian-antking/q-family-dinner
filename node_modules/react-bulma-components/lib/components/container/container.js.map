{"version":3,"sources":["../../../src/components/container/container.js"],"names":["breakpoints","concat","Object","keys","CONSTANTS","BREAKPOINTS","map","key","Container","children","fluid","breakpoint","className","props","propTypes","modifiers","PropTypes","node","bool","string","style","shape","oneOf","renderAs","oneOfType","func","defaultProps","undefined"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAMA,cAAc,CAAC,IAAD,EAAOC,MAAP,CAAcC,OAAOC,IAAP,CAAYC,oBAAUC,WAAtB,EAAmCC,GAAnC,CAAuC;AAAA,SAAOF,oBAAUC,WAAV,CAAsBE,GAAtB,CAAP;AAAA,CAAvC,CAAd,CAApB;;AAEA,IAAMC,YAAY,SAAZA,SAAY;AAAA,MAChBC,QADgB,QAChBA,QADgB;AAAA,MAEhBC,KAFgB,QAEhBA,KAFgB;AAAA,MAGhBC,UAHgB,QAGhBA,UAHgB;AAAA,MAIhBC,SAJgB,QAIhBA,SAJgB;AAAA,MAKbC,KALa;;AAAA,SAOhB;AAAC,qBAAD;AAAA,iBACMA,KADN;AAEE,iBAAW,0BAAW,WAAX,EAAwBD,SAAxB;AACT,oBAAYF;AADH,iBAEFC,UAFE,EAEaA,UAFb;AAFb;AAOGF;AAPH,GAPgB;AAAA,CAAlB;;AAkBAD,UAAUM,SAAV,gBACKC,oBAAUD,SADf;AAEEL,YAAUO,oBAAUC,IAFtB;AAGEP,SAAOM,oBAAUE,IAHnB;AAIEN,aAAWI,oBAAUG,MAJvB;AAKEC,SAAOJ,oBAAUK,KAAV,CAAgB,EAAhB,CALT;AAMEV,cAAYK,oBAAUM,KAAV,CAAgBtB,WAAhB,CANd;AAOEuB,YAAUP,oBAAUQ,SAAV,CAAoB,CAACR,oBAAUG,MAAX,EAAmBH,oBAAUS,IAA7B,CAApB;AAPZ;;AAUAjB,UAAUkB,YAAV,gBACKX,oBAAUW,YADf;AAEEhB,SAAO,KAFT;AAGED,YAAU,IAHZ;AAIEE,cAAY,IAJd;AAKEC,aAAWe,SALb;AAMEP,SAAO,EANT;AAOEG,YAAU;AAPZ;;kBAUef,S","file":"container.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst breakpoints = [null].concat(Object.keys(CONSTANTS.BREAKPOINTS).map(key => CONSTANTS.BREAKPOINTS[key]));\n\nconst Container = ({\n  children,\n  fluid,\n  breakpoint,\n  className,\n  ...props\n}) => (\n  <Element\n    {...props}\n    className={classnames('container', className, {\n      'is-fluid': fluid,\n      [`is-${breakpoint}`]: breakpoint,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nContainer.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  fluid: PropTypes.bool,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  breakpoint: PropTypes.oneOf(breakpoints),\n  renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n};\n\nContainer.defaultProps = {\n  ...modifiers.defaultProps,\n  fluid: false,\n  children: null,\n  breakpoint: null,\n  className: undefined,\n  style: {},\n  renderAs: 'div',\n};\n\nexport default Container;\n"]}