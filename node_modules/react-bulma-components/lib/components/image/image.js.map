{"version":3,"sources":["../../../src/components/image/image.js"],"names":["Image","state","onError","setState","src","props","fallback","className","alt","size","allProps","modifiers","clean","s","PureComponent","propTypes","PropTypes","string","style","shape","oneOf","CONSTANTS","SIZES","defaultProps","getDerivedStateFromProps","default"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;IAEqBA,K;;;;;;;;;;;;;;oLAqBnBC,K,GAAQ,E,QAERC,O,GAAU,YAAM;AACd,YAAKC,QAAL,CAAc;AACZC,aAAK,MAAKC,KAAL,CAAWC;AADJ,OAAd;AAGD,K;;;;;6BAOQ;AAAA,mBAQH,KAAKD,KARF;AAAA,UAELE,SAFK,UAELA,SAFK;AAAA,UAGLC,GAHK,UAGLA,GAHK;AAAA,UAILC,IAJK,UAILA,IAJK;AAAA,UAKLH,QALK,UAKLA,QALK;AAAA,UAMLF,GANK,UAMLA,GANK;AAAA,UAOFM,QAPE;;AASP,UAAML,QAAQM,oBAAUC,KAAV,CAAgBF,QAAhB,CAAd;AACA,UAAIG,IAAIJ,IAAR;;AAEA,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BI,YAAOA,CAAP,SAAYA,CAAZ;AACD;;AAED,aACE;AAAA;AAAA,qBACMR,KADN;AAEE,qBAAW,0BAAW,OAAX,EAAoBE,SAApB,8BACFM,CADE,EACIA,CADJ;AAFb;AAME,+CAAK,SAAS,KAAKX,OAAnB,EAA4B,KAAK,KAAKD,KAAL,CAAWG,GAA5C,EAAiD,KAAKI,GAAtD;AANF,OADF;AAUD;;;;EA5DgCM,oB;;AAAdd,K,CACZe,S,gBACFJ,oBAAUI,S;AACbR,aAAWS,oBAAUC,M;AACrBb,OAAKY,oBAAUC,M;AACfT,OAAKQ,oBAAUC,M;AACfC,SAAOF,oBAAUG,KAAV,CAAgB,EAAhB,C;AACPV,QAAMO,oBAAUI,KAAV,CAAgBC,oBAAUC,KAA1B,C;AACNhB,YAAUU,oBAAUC;;AARHjB,K,CAWZuB,Y,gBACFZ,oBAAUY,Y;AACbhB,aAAW,E;AACXH,OAAK,E;AACLI,OAAK,E;AACLU,SAAO,E;AACPT,QAAM,I;AACNH,YAAU;;;AAlBON,K,CA6BZwB,wB,GAA2B,UAACnB,KAAD,EAAQJ,KAAR;AAAA,SAAmB;AACnDG,SAAKH,MAAMwB,OAAN,KAAkBpB,MAAMD,GAAxB,GAA8BC,MAAMD,GAApC,GAA0CH,MAAMG,GADF;AAEnDqB,aAASpB,MAAMD;AAFoC,GAAnB;AAAA,C;;kBA7BfJ,K","file":"image.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from './constants';\nimport modifiers from '../../modifiers';\n\nexport default class Image extends PureComponent {\n  static propTypes = {\n    ...modifiers.propTypes,\n    className: PropTypes.string,\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    style: PropTypes.shape({}),\n    size: PropTypes.oneOf(CONSTANTS.SIZES),\n    fallback: PropTypes.string,\n  }\n\n  static defaultProps = {\n    ...modifiers.defaultProps,\n    className: '',\n    src: '',\n    alt: '',\n    style: {},\n    size: null,\n    fallback: 'http//bulma.io/images/placeholders/480x480.png',\n  }\n\n  state = {}\n\n  onError = () => {\n    this.setState({\n      src: this.props.fallback,\n    });\n  }\n\n  static getDerivedStateFromProps = (props, state) => ({\n    src: state.default !== props.src ? props.src : state.src,\n    default: props.src,\n  })\n\n  render() {\n    const {\n      className,\n      alt,\n      size,\n      fallback,\n      src,\n      ...allProps\n    } = this.props;\n    const props = modifiers.clean(allProps);\n    let s = size;\n\n    if (typeof size === 'number') {\n      s = `${s}x${s}`;\n    }\n\n    return (\n      <figure\n        {...props}\n        className={classnames('image', className, {\n          [`is-${s}`]: s,\n        })}\n      >\n        <img onError={this.onError} src={this.state.src} alt={alt} />\n      </figure>\n    );\n  }\n}\n"]}