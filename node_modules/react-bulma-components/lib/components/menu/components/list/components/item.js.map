{"version":3,"sources":["../../../../../../src/components/menu/components/list/components/item.js"],"names":["MenuListItem","children","active","className","props","React","Children","only","type","List","child","title","cloneElement","propTypes","modifiers","PropTypes","string","oneOfType","element","bool","renderAs","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;AAHA;;;AAKA,IAAMA,eAAe,SAAfA,YAAe,OAKf;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,KACC;;AACJ,MAAI,OAAOH,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WACE;AAAA;AAAA;AACE;AAAC,yBAAD;AAAA,mBAAS,WAAW,0BAAWE,SAAX,EAAsB,EAAE,aAAaD,MAAf,EAAtB,CAApB,IAAwEE,KAAxE;AACGH;AADH;AADF,KADF;AAOD;;AAED,MAAII,gBAAMC,QAAN,CAAeC,IAAf,CAAoBN,QAApB,EAA8BO,IAA9B,KAAuCC,cAA3C,EAAiD;AAC/C,QAAMC,QAAQL,gBAAMC,QAAN,CAAeC,IAAf,CAAoBN,QAApB,CAAd;AACA,WACE;AAAA;AAAA;AACE;AAAC,yBAAD;AAAA,mBAAS,WAAW,0BAAWE,SAAX,EAAsB,EAAE,aAAaD,MAAf,EAAtB,CAApB,IAAwEE,KAAxE;AACGM,cAAMN,KAAN,CAAYO;AADf,OADF;AAIGN,sBAAMO,YAAN,CAAmBF,KAAnB,EAA0B,EAAEC,OAAO,IAAT,EAA1B;AAJH,KADF;AAQD;;AAED,SACE;AAAA;AAAA;AACGV;AADH,GADF;AAKD,CAjCD;;AAmCAD,aAAaa,SAAb,gBACKC,oBAAUD,SADf;AAEEV,aAAWY,oBAAUC,MAFvB;AAGEf,YAAUc,oBAAUE,SAAV,CAAoB,CAC5BF,oBAAUC,MADkB,EAE5BD,oBAAUG,OAFkB,CAApB,CAHZ;AAOEhB,UAAQa,oBAAUI,IAPpB;AAQEC,YAAUL,oBAAUE,SAAV,CAAoB,CAC5BF,oBAAUC,MADkB,EAE5BD,oBAAUM,IAFkB,CAApB;AARZ;;AAcArB,aAAasB,YAAb,gBACKR,oBAAUQ,YADf;AAEEnB,aAAW,EAFb;AAGEF,YAAU,IAHZ;AAIEC,UAAQ,KAJV;AAKEkB,YAAU;AALZ;;kBAQepB,Y","file":"item.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n/* eslint-disable-next-line import/no-cycle */\nimport List from '../list';\nimport modifiers from '../../../../../modifiers';\nimport Element from '../../../../element';\n\nconst MenuListItem = ({\n  children,\n  active,\n  className,\n  ...props\n}) => {\n  if (typeof children === 'string') {\n    return (\n      <li>\n        <Element className={classnames(className, { 'is-active': active })} {...props}>\n          {children}\n        </Element>\n      </li>\n    );\n  }\n\n  if (React.Children.only(children).type === List) {\n    const child = React.Children.only(children);\n    return (\n      <li>\n        <Element className={classnames(className, { 'is-active': active })} {...props}>\n          {child.props.title}\n        </Element>\n        {React.cloneElement(child, { title: null })}\n      </li>\n    );\n  }\n\n  return (\n    <li>\n      {children}\n    </li>\n  );\n};\n\nMenuListItem.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]),\n  active: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nMenuListItem.defaultProps = {\n  ...modifiers.defaultProps,\n  className: '',\n  children: null,\n  active: false,\n  renderAs: 'a',\n};\n\nexport default MenuListItem;\n"]}