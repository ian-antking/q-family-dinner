'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react3 = require('@storybook/react');

var _addonKnobs = require('@storybook/addon-knobs');

var _addonActions = require('@storybook/addon-actions');

var _button = require('react-bulma-components/lib/components/button');

var _button2 = _interopRequireDefault(_button);

var _section = require('react-bulma-components/lib/components/section');

var _section2 = _interopRequireDefault(_section);

var _box = require('react-bulma-components/lib/components/box');

var _box2 = _interopRequireDefault(_box);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var colors = {
  Default: '',
  primary: 'primary',
  info: 'info',
  danger: 'danger',
  warning: 'warning',
  success: 'success',
  white: 'white',
  black: 'black',
  light: 'light',
  dark: 'dark',
  link: 'link'
};

var positions = {
  default: '',
  centered: 'centered',
  right: 'right'
};

(0, _react3.storiesOf)('Button', module).addDecorator(function (story) {
  return _react2.default.createElement(
    'div',
    { className: 'button-display' },
    story()
  );
}).add('Default', function () {
  return _react2.default.createElement(
    _section2.default,
    null,
    _react2.default.createElement(
      _box2.default,
      null,
      'Play with the button props using the knobs addon panel at the bottom'
    ),
    _react2.default.createElement(
      _button2.default,
      {
        fullwidth: (0, _addonKnobs.boolean)('Full width', false),
        color: (0, _addonKnobs.select)('Color', colors),
        loading: (0, _addonKnobs.boolean)('Loading', false),
        outlined: (0, _addonKnobs.boolean)('Outlined', false),
        inverted: (0, _addonKnobs.boolean)('Inverted', false),
        disabled: (0, _addonKnobs.boolean)('Disabled', false),
        text: (0, _addonKnobs.boolean)('Text', false),
        remove: (0, _addonKnobs.boolean)('Remove', false),
        isStatic: (0, _addonKnobs.boolean)('Static', false),
        rounded: (0, _addonKnobs.boolean)('Rounded', false),
        onClick: (0, _addonActions.action)('Button Click'),
        onMouseEnter: (0, _addonActions.action)('Hover')
      },
      'Button'
    )
  );
}).add('As another React element', function () {
  var CustomComponent = function CustomComponent(_ref) {
    var customProp = _ref.customProp,
        children = _ref.children,
        className = _ref.className;
    return _react2.default.createElement(
      'a',
      { className: className, href: customProp },
      children
    );
  };

  CustomComponent.propTypes = {
    customProp: _propTypes2.default.string.isRequired,
    className: _propTypes2.default.string.isRequired,
    children: _propTypes2.default.node.isRequired
  };

  return _react2.default.createElement(
    _section2.default,
    null,
    _react2.default.createElement(
      _button2.default,
      {
        color: 'info',
        renderAs: CustomComponent,
        customProp: 'https://github.com/couds/react-bulma-components'
      },
      'Button rendered using another React Component with props'
    )
  );
}).add('Button group', function () {
  return _react2.default.createElement(
    _section2.default,
    null,
    _react2.default.createElement(
      _button2.default.Group,
      {
        hasAddons: (0, _addonKnobs.boolean)('hasAddons', false),
        position: (0, _addonKnobs.select)('Position', positions)
      },
      _react2.default.createElement(
        _button2.default,
        {
          renderAs: 'span',
          color: 'success'
        },
        'Save changes'
      ),
      _react2.default.createElement(
        _button2.default,
        {
          renderAs: 'span',
          color: 'info'
        },
        'Save and continue'
      ),
      _react2.default.createElement(
        _button2.default,
        {
          renderAs: 'span',
          color: 'danger'
        },
        'Cancel'
      )
    )
  );
});
//# sourceMappingURL=button.story.js.map