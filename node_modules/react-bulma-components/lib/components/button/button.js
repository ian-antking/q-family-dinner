'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _constants = require('../../constants');

var _constants2 = _interopRequireDefault(_constants);

var _modifiers = require('../../modifiers');

var _modifiers2 = _interopRequireDefault(_modifiers);

var _buttonGroup = require('./components/button-group');

var _buttonGroup2 = _interopRequireDefault(_buttonGroup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var colors = [null, ''].concat(Object.keys(_constants2.default.COLORS).map(function (key) {
  return _constants2.default.COLORS[key];
}));

var Button = function Button(_ref) {
  var _classnames;

  var children = _ref.children,
      className = _ref.className,
      renderAs = _ref.renderAs,
      color = _ref.color,
      size = _ref.size,
      outlined = _ref.outlined,
      inverted = _ref.inverted,
      state = _ref.state,
      submit = _ref.submit,
      reset = _ref.reset,
      fullwidth = _ref.fullwidth,
      loading = _ref.loading,
      disabled = _ref.disabled,
      remove = _ref.remove,
      isSelected = _ref.isSelected,
      isStatic = _ref.isStatic,
      rounded = _ref.rounded,
      onClick = _ref.onClick,
      text = _ref.text,
      allProps = _objectWithoutProperties(_ref, ['children', 'className', 'renderAs', 'color', 'size', 'outlined', 'inverted', 'state', 'submit', 'reset', 'fullwidth', 'loading', 'disabled', 'remove', 'isSelected', 'isStatic', 'rounded', 'onClick', 'text']);

  var Element = isStatic ? 'span' : renderAs;
  var props = _modifiers2.default.clean(allProps);
  var otherProps = {};
  if (submit) {
    Element = 'button';
    otherProps.type = 'submit';
  }
  if (reset) {
    Element = 'button';
    otherProps.type = 'reset';
  }

  return _react2.default.createElement(
    Element,
    _extends({
      tabIndex: disabled ? -1 : 0
    }, props, otherProps, {
      disabled: disabled,
      onClick: disabled ? undefined : onClick,
      className: (0, _classnames3.default)(className, _modifiers2.default.classnames(allProps), (_classnames = {}, _defineProperty(_classnames, 'is-' + color, color), _defineProperty(_classnames, 'is-' + size, size), _defineProperty(_classnames, 'is-' + state, state), _defineProperty(_classnames, 'is-selected', isSelected), _defineProperty(_classnames, 'is-static', isStatic), _defineProperty(_classnames, 'is-rounded', rounded), _defineProperty(_classnames, 'is-outlined', outlined), _defineProperty(_classnames, 'is-inverted', inverted), _defineProperty(_classnames, 'is-fullwidth', fullwidth), _defineProperty(_classnames, 'is-loading', loading), _defineProperty(_classnames, 'is-text', text), _defineProperty(_classnames, 'delete', remove), _defineProperty(_classnames, 'button', !remove), _classnames))
    }),
    children
  );
};

Button.Group = _buttonGroup2.default;

Button.propTypes = _extends({}, _modifiers2.default.propTypes, {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  style: _propTypes2.default.shape({}),
  renderAs: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['a', 'button', 'span']), _propTypes2.default.func]),
  onClick: _propTypes2.default.func,
  color: _propTypes2.default.oneOf(colors),
  size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
  state: _propTypes2.default.oneOf(['hover', 'focus', 'active', 'loading']),
  outlined: _propTypes2.default.bool,
  inverted: _propTypes2.default.bool,
  submit: _propTypes2.default.bool,
  reset: _propTypes2.default.bool,
  loading: _propTypes2.default.bool,
  fullwidth: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  remove: _propTypes2.default.bool,
  isSelected: _propTypes2.default.bool,
  isStatic: _propTypes2.default.bool,
  rounded: _propTypes2.default.bool,
  text: _propTypes2.default.bool
});

Button.defaultProps = _extends({}, _modifiers2.default.defaultProps, {
  children: null,
  className: '',
  style: {},
  renderAs: 'button',
  onClick: function onClick() {
    return null;
  },
  color: null,
  size: null,
  state: null,
  outlined: false,
  inverted: false,
  submit: false,
  reset: false,
  fullwidth: false,
  loading: false,
  disabled: false,
  remove: false,
  isSelected: false,
  isStatic: false,
  rounded: false,
  text: false
});

exports.default = Button;
//# sourceMappingURL=button.js.map