'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _tagGroup = require('./components/tag-group');

var _tagGroup2 = _interopRequireDefault(_tagGroup);

var _constants = require('../../constants');

var _constants2 = _interopRequireDefault(_constants);

var _modifiers = require('../../modifiers');

var _modifiers2 = _interopRequireDefault(_modifiers);

var _element = require('../element');

var _element2 = _interopRequireDefault(_element);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var colors = [null].concat(Object.keys(_constants2.default.COLORS).map(function (key) {
  return _constants2.default.COLORS[key];
}));

var Tag = function Tag(_ref) {
  var _classnames;

  var children = _ref.children,
      className = _ref.className,
      color = _ref.color,
      size = _ref.size,
      rounded = _ref.rounded,
      remove = _ref.remove,
      props = _objectWithoutProperties(_ref, ['children', 'className', 'color', 'size', 'rounded', 'remove']);

  return _react2.default.createElement(
    _element2.default,
    _extends({}, props, {
      className: (0, _classnames3.default)('tag', className, (_classnames = {}, _defineProperty(_classnames, 'is-' + size, size), _defineProperty(_classnames, 'is-' + color, color), _defineProperty(_classnames, 'is-rounded', rounded), _defineProperty(_classnames, 'is-delete', remove), _classnames))
    }),
    !remove && children
  );
};

Tag.Group = _tagGroup2.default;

Tag.propTypes = _extends({}, _modifiers2.default.propTypes, {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  style: _propTypes2.default.shape({}),
  color: _propTypes2.default.oneOf(colors),
  size: _propTypes2.default.oneOf(['medium', 'large']),
  rounded: _propTypes2.default.bool,
  remove: _propTypes2.default.bool,
  renderAs: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
});

Tag.defaultProps = _extends({}, _modifiers2.default.defaultProps, {
  children: null,
  className: '',
  style: {},
  color: null,
  size: null,
  rounded: false,
  remove: false,
  renderAs: 'span'
});

exports.default = Tag;
//# sourceMappingURL=tag.js.map