{"version":3,"sources":["../../../src/components/tag/tag.js"],"names":["colors","concat","Object","keys","CONSTANTS","COLORS","map","key","Tag","children","className","color","size","rounded","remove","props","Group","TagGroup","propTypes","modifiers","PropTypes","node","string","style","shape","oneOf","bool","renderAs","oneOfType","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAMA,SAAS,CAAC,IAAD,EAAOC,MAAP,CAAcC,OAAOC,IAAP,CAAYC,oBAAUC,MAAtB,EAA8BC,GAA9B,CAAkC;AAAA,SAAOF,oBAAUC,MAAV,CAAiBE,GAAjB,CAAP;AAAA,CAAlC,CAAd,CAAf;;AAEA,IAAMC,MAAM,SAANA,GAAM;AAAA;;AAAA,MACVC,QADU,QACVA,QADU;AAAA,MAEVC,SAFU,QAEVA,SAFU;AAAA,MAGVC,KAHU,QAGVA,KAHU;AAAA,MAIVC,IAJU,QAIVA,IAJU;AAAA,MAKVC,OALU,QAKVA,OALU;AAAA,MAMVC,MANU,QAMVA,MANU;AAAA,MAOPC,KAPO;;AAAA,SASV;AAAC,qBAAD;AAAA,iBACMA,KADN;AAEE,iBAAW,0BAAW,KAAX,EAAkBL,SAAlB,0DACFE,IADE,EACOA,IADP,wCAEFD,KAFE,EAEQA,KAFR,gCAGT,YAHS,EAGKE,OAHL,gCAIT,WAJS,EAIIC,MAJJ;AAFb;AASG,KAACA,MAAD,IAAWL;AATd,GATU;AAAA,CAAZ;;AAsBAD,IAAIQ,KAAJ,GAAYC,kBAAZ;;AAEAT,IAAIU,SAAJ,gBACKC,oBAAUD,SADf;AAEET,YAAUW,oBAAUC,IAFtB;AAGEX,aAAWU,oBAAUE,MAHvB;AAIEC,SAAOH,oBAAUI,KAAV,CAAgB,EAAhB,CAJT;AAKEb,SAAOS,oBAAUK,KAAV,CAAgBzB,MAAhB,CALT;AAMEY,QAAMQ,oBAAUK,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CANR;AAOEZ,WAASO,oBAAUM,IAPrB;AAQEZ,UAAQM,oBAAUM,IARpB;AASEC,YAAUP,oBAAUQ,SAAV,CAAoB,CAACR,oBAAUE,MAAX,EAAmBF,oBAAUS,IAA7B,CAApB;AATZ;;AAYArB,IAAIsB,YAAJ,gBACKX,oBAAUW,YADf;AAEErB,YAAU,IAFZ;AAGEC,aAAW,EAHb;AAIEa,SAAO,EAJT;AAKEZ,SAAO,IALT;AAMEC,QAAM,IANR;AAOEC,WAAS,KAPX;AAQEC,UAAQ,KARV;AASEa,YAAU;AATZ;;kBAYenB,G","file":"tag.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport TagGroup from './components/tag-group';\nimport CONSTANTS from '../../constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst colors = [null].concat(Object.keys(CONSTANTS.COLORS).map(key => CONSTANTS.COLORS[key]));\n\nconst Tag = ({\n  children,\n  className,\n  color,\n  size,\n  rounded,\n  remove,\n  ...props\n}) => (\n  <Element\n    {...props}\n    className={classnames('tag', className, {\n      [`is-${size}`]: size,\n      [`is-${color}`]: color,\n      'is-rounded': rounded,\n      'is-delete': remove,\n    })}\n  >\n    {!remove && children}\n  </Element>\n);\n\nTag.Group = TagGroup;\n\nTag.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  color: PropTypes.oneOf(colors),\n  size: PropTypes.oneOf(['medium', 'large']),\n  rounded: PropTypes.bool,\n  remove: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n};\n\nTag.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: '',\n  style: {},\n  color: null,\n  size: null,\n  rounded: false,\n  remove: false,\n  renderAs: 'span',\n};\n\nexport default Tag;\n"]}